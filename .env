#!/bin/bash
# Shell environment for the project. Generated by ./configure. DO NOT EDIT!

export PHD="/home/deepfuzz/Desktop/DeepFuzzTest"

if [[ -d "$HOME/venv/phd/bin" ]]; then
  # If there is a virtualenv, use it. Note that even if it does exist, bazel
  # will go ahead and ignore it, so we still need to rely on the system python
  # being the required version.
  . "$HOME/venv/phd/bin/activate"
else
  # Export a dummy virtualenv.
  # TODO(cec): Add a better way of signalling that we're in the phd env from
  # the command line.
  export VIRTUAL_ENV=phd
fi

# Export a dummy virtualenv.
# TODO(cec): Add a better way of signalling that we're in the phd env from
# the command line.
export VIRTUAL_ENV=phd

# Ensure that default python is 3.6.
echo $PATH | grep $HOME/.local/bin >/dev/null || export PATH="$HOME/.local/bin:$PATH"

export PYTHON="/home/deepfuzz/.conda/envs/py36/bin/python3.6"

export PYTHONPATH=/home/deepfuzz/Desktop/DeepFuzzTest:/home/deepfuzz/Desktop/DeepFuzzTest/lib:/home/deepfuzz/Desktop/DeepFuzzTest/bazel-genfiles

# TODO(cec): Remove this workaround once the underlying issue is fixed.
# See: https://github.com/bazelbuild/rules_docker/issues/293
export BAZEL_PYTHON=$PHD/tools/py3_wrapper.sh

# TODO(cec): Remove whatever is setting $CC to clang, rather than unset here.
unset CC
unset CXX

clgen() {
  bazel build //deeplearning/clgen
  /home/deepfuzz/Desktop/DeepFuzzTest/bazel-phd/bazel-out/*-py3-opt/bin/deeplearning/clgen/clgen $@
}
