#!/usr/bin/env bash
#
# scp - A mock scp implementation.
#
# Used for testing labm8.system.scp() functionality without having to
# use the system scp command.
#
# Usage:
#
#     scp [options] [<user>@]<host>:<src> <dst>
#
# Where [options] is an optional set of "-<flag> <value>" argument
# pairs, e.g. "-o StrictHostKeyChecking=no".
#
# Behaviour:
#
#   * All options are ignored.
#   * User (if present) is ignored
#   * If the host is not "localhost", exits with status 1.
#   * If src is not a locally accessible file, exists with status 2.
#   * If local file transfer fails, exits with error (determined by cp).
#
set -eu


# Filter arguments to remove "-<flag> <option>" arguments.
#
# Arguments:
#
#     $@ (array of str): A set of arguments to parse.
#
# Returns:
#
#     str: Space separated arguments, ignoring any flags.
filter_flag_args() {
    local args=$@
    local ignore_next_arg=0
    local out_args=""

    for arg in $args; do
        if [[ $ignore_next_arg = 1 ]]; then
            ignore_next_arg=0
        elif [[ ${arg:0:1} = "-" ]]; then
            ignore_next_arg=1
        else
            out_args="$out_args $arg"
        fi
    done

    echo $out_args
}

get_user() {
    local args=($@)
    local first=${args[0]}
    local split=(${first//@/ })

    if [[ ${#split[@]} > 1 ]]; then
        echo ${split[0]}
    else
        echo ""
    fi
}

get_host() {
    local args=($@)
    local first=${args[0]}
    local split=(${first//:/ })
    local split=(${split//@/ })

    if [[ ${#split[@]} = 2 ]]; then
        echo ${split[1]}
    else
        echo ${split[0]}
    fi
}

get_src() {
    local args=($@)
    local first=${args[0]}
    local split=(${first//:/ })
    echo ${split[1]}
}


get_dst() {
    local args=($@)
    echo ${args[1]}
}


args=$(filter_flag_args $@)

user=$(get_user $args)
host=$(get_host $args)
src=$(get_src $args)
dst=$(get_dst $args)

echo "USER: $user"
echo "HOST: $host"
echo "SRC:  $src"
echo "DEST: $dst"

if [[ "$host" != localhost ]]; then
    echo "Bad host!"
    exit 1
elif [[ ! -f "$src" ]]; then
    echo "Bad src!"
    exit 2
fi

# Perform file transfer.
cp "$src" "$dst"
