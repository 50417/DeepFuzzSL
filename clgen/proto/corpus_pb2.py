# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: clgen/proto/corpus.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='clgen/proto/corpus.proto',
  package='clgen',
  syntax='proto2',
  serialized_options=_b('\n\005clgen'),
  serialized_pb=_b('\n\x18\x63lgen/proto/corpus.proto\x12\x05\x63lgen\"\x90\x02\n\x06\x43orpus\x12\x14\n\ncontent_id\x18\x01 \x01(\tH\x00\x12\x19\n\x0flocal_directory\x18\x02 \x01(\tH\x00\x12\x1b\n\x11local_tar_archive\x18\x03 \x01(\tH\x00\x12\"\n\x18\x61scii_character_atomizer\x18\x14 \x01(\x08H\x01\x12\x43\n\x19greedy_multichar_atomizer\x18\x15 \x01(\x0b\x32\x1e.clgen.GreedyMulticharAtomizerH\x01\x12\x14\n\x0cpreprocessor\x18\x1e \x03(\t\x12\x1d\n\x15\x63ontentfile_separator\x18  \x01(\tB\x0e\n\x0c\x63ontentfilesB\n\n\x08\x61tomizer\")\n\x17GreedyMulticharAtomizer\x12\x0e\n\x06tokens\x18\x01 \x03(\tB\x07\n\x05\x63lgen')
)




_CORPUS = _descriptor.Descriptor(
  name='Corpus',
  full_name='clgen.Corpus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content_id', full_name='clgen.Corpus.content_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='local_directory', full_name='clgen.Corpus.local_directory', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='local_tar_archive', full_name='clgen.Corpus.local_tar_archive', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ascii_character_atomizer', full_name='clgen.Corpus.ascii_character_atomizer', index=3,
      number=20, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='greedy_multichar_atomizer', full_name='clgen.Corpus.greedy_multichar_atomizer', index=4,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='preprocessor', full_name='clgen.Corpus.preprocessor', index=5,
      number=30, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='contentfile_separator', full_name='clgen.Corpus.contentfile_separator', index=6,
      number=32, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='contentfiles', full_name='clgen.Corpus.contentfiles',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='atomizer', full_name='clgen.Corpus.atomizer',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=36,
  serialized_end=308,
)


_GREEDYMULTICHARATOMIZER = _descriptor.Descriptor(
  name='GreedyMulticharAtomizer',
  full_name='clgen.GreedyMulticharAtomizer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tokens', full_name='clgen.GreedyMulticharAtomizer.tokens', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=310,
  serialized_end=351,
)

_CORPUS.fields_by_name['greedy_multichar_atomizer'].message_type = _GREEDYMULTICHARATOMIZER
_CORPUS.oneofs_by_name['contentfiles'].fields.append(
  _CORPUS.fields_by_name['content_id'])
_CORPUS.fields_by_name['content_id'].containing_oneof = _CORPUS.oneofs_by_name['contentfiles']
_CORPUS.oneofs_by_name['contentfiles'].fields.append(
  _CORPUS.fields_by_name['local_directory'])
_CORPUS.fields_by_name['local_directory'].containing_oneof = _CORPUS.oneofs_by_name['contentfiles']
_CORPUS.oneofs_by_name['contentfiles'].fields.append(
  _CORPUS.fields_by_name['local_tar_archive'])
_CORPUS.fields_by_name['local_tar_archive'].containing_oneof = _CORPUS.oneofs_by_name['contentfiles']
_CORPUS.oneofs_by_name['atomizer'].fields.append(
  _CORPUS.fields_by_name['ascii_character_atomizer'])
_CORPUS.fields_by_name['ascii_character_atomizer'].containing_oneof = _CORPUS.oneofs_by_name['atomizer']
_CORPUS.oneofs_by_name['atomizer'].fields.append(
  _CORPUS.fields_by_name['greedy_multichar_atomizer'])
_CORPUS.fields_by_name['greedy_multichar_atomizer'].containing_oneof = _CORPUS.oneofs_by_name['atomizer']
DESCRIPTOR.message_types_by_name['Corpus'] = _CORPUS
DESCRIPTOR.message_types_by_name['GreedyMulticharAtomizer'] = _GREEDYMULTICHARATOMIZER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Corpus = _reflection.GeneratedProtocolMessageType('Corpus', (_message.Message,), dict(
  DESCRIPTOR = _CORPUS,
  __module__ = 'clgen.proto.corpus_pb2'
  # @@protoc_insertion_point(class_scope:clgen.Corpus)
  ))
_sym_db.RegisterMessage(Corpus)

GreedyMulticharAtomizer = _reflection.GeneratedProtocolMessageType('GreedyMulticharAtomizer', (_message.Message,), dict(
  DESCRIPTOR = _GREEDYMULTICHARATOMIZER,
  __module__ = 'clgen.proto.corpus_pb2'
  # @@protoc_insertion_point(class_scope:clgen.GreedyMulticharAtomizer)
  ))
_sym_db.RegisterMessage(GreedyMulticharAtomizer)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
